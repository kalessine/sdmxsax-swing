/**
 * This file is part of SdmxSax.
 *
 * SdmxSax is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * SdmxSax is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * SdmxSax. If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright James Gardner 2014
 */
package sdmxsaxswing;

import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import sdmx.SdmxIO;
import sdmx.commonreferences.DataStructureReference;
import sdmx.exception.ParseException;
import sdmx.message.DataMessage;
import sdmx.message.StructureType;
import sdmx.structure.dataflow.DataflowType;
import sdmx.structureddata.StructuredDataMessage;
import sdmxsaxswing.dataandstructure.CombinedDataJFrame;
import sdmxsaxswing.dataonly.DisplayDataMessageJFrame;
import sdmxsaxswing.dataprovider.DataProviderComboBoxModel;
import sdmxsaxswing.dataprovider.DataProviderJFrame;
import sdmx.net.LocalRegistry;
import sdmx.Queryable;
import sdmx.Registry;
import sdmx.commonreferences.IDType;
import sdmx.net.list.DataProvider;
import sdmx.version.common.ParseDataCallbackHandler;
import sdmx.version.common.ParseParams;
import sdmx.version.twopointone.writer.Sdmx21StructureWriter;
/**
 *
 * @author James
 */
public class LoadDataJPanel extends javax.swing.JPanel {

    DataflowComboBoxModel refModel = new DataflowComboBoxModel();

    /**
     * Creates new form LoadDataJPanel
     */
    public LoadDataJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        browseFile = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jtStructure = new javax.swing.JTextField();
        browseStructure = new javax.swing.JButton();
        browseData = new javax.swing.JButton();
        jtData = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbLoadBoth = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcbProvider = new javax.swing.JComboBox();
        jcbDataSet = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jcbStructureMime = new javax.swing.JComboBox();
        jcbDataMime = new javax.swing.JComboBox();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Load Data Message"));

        browseFile.setText("Browse");
        browseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setText("CompactData, GenericData(2.0), StructureSpecific, GenericData(2.1)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(browseFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseFile)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Load Data Message with Data Structure"));

        jtStructure.setEditable(false);

        browseStructure.setText("Browse");
        browseStructure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseStructureActionPerformed(evt);
            }
        });

        browseData.setText("Browse");
        browseData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseDataActionPerformed(evt);
            }
        });

        jtData.setEditable(false);

        jLabel1.setText("Data");

        jLabel2.setText("Structure");

        jbLoadBoth.setText("Load");
        jbLoadBoth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLoadBothActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(browseStructure)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtStructure))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(browseData)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtData))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jbLoadBoth, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseStructure)
                    .addComponent(jtStructure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseData))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbLoadBoth)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Service"));

        jLabel3.setText("Provider");

        jLabel4.setText("DataSet");

        jcbProvider.setModel(new sdmxsaxswing.dataprovider.DataProviderComboBoxModel());
        jcbProvider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbProviderActionPerformed(evt);
            }
        });

        jcbDataSet.setModel(refModel);
        jcbDataSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDataSetActionPerformed(evt);
            }
        });

        jButton1.setText("Load");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbProvider, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbDataSet, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbProvider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jcbDataSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Convert Above"));
        jPanel5.setEnabled(false);

        jButton2.setText("Convert Data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Convert Structure");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jcbStructureMime.setModel(new javax.swing.DefaultComboBoxModel(SdmxIO.listStructureMIMETypes().toArray(new String[] {})));

        jcbDataMime.setModel(new javax.swing.DefaultComboBoxModel(SdmxIO.listDataMIMETypes().toArray(new String[] {})));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(185, 185, 185)
                                .addComponent(jButton3))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jcbStructureMime, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jcbDataMime, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbStructureMime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jButton3)
                .addGap(9, 9, 9)
                .addComponent(jcbDataMime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void browseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseFileActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.showOpenDialog(this);
        File f = jfc.getSelectedFile();
        DisplayDataMessageJFrame frame = new DisplayDataMessageJFrame();
        SwingUtilities.getRoot(this).setVisible(false);
        frame.setVisible(true);
        frame.setFile(f);
    }//GEN-LAST:event_browseFileActionPerformed

    private void browseStructureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseStructureActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.showOpenDialog(this);
        File file = jfc.getSelectedFile();
        if (file == null) {
            return;
        }
        this.jtStructure.setText(file.getPath());
    }//GEN-LAST:event_browseStructureActionPerformed

    private void browseDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseDataActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.showOpenDialog(this);
        File file = jfc.getSelectedFile();
        if (file == null) {
            return;
        }
        this.jtData.setText(file.getPath());
    }//GEN-LAST:event_browseDataActionPerformed

    private void jbLoadBothActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLoadBothActionPerformed
        FileInputStream dataFis = null;
        FileInputStream strucFis = null;
        try {
            File structure = new File(jtStructure.getText());
            File data = new File(jtData.getText());
            strucFis = new FileInputStream(structure);
            dataFis = new FileInputStream(data);
            ParseParams params = new ParseParams();
            params.setRegistry(LocalRegistry.getDefaultWorkspace());
            StructureType struct = SdmxIO.parseStructure(params, strucFis);
            DataMessage dataMsg = SdmxIO.parseData(dataFis);
            if (SdmxIO.isSaveXml()) {
                File f = new File(System.currentTimeMillis() + ".xml");
                System.out.println("f=" + f.getPath());
                FileOutputStream fos = new FileOutputStream(f);
                sdmx.version.twopointone.writer.Sdmx21StructureWriter.write(struct, fos);
            }
            if (struct.getStructures().getDataStructures().getDataStructures().size() == 0) {
                return;
            }
            if (struct.getStructures().getDataStructures().getDataStructures().size() > 1) {
                ChooseDataStructureJDialog dialog = new ChooseDataStructureJDialog(MainJFrame.FRAME, true);
                dialog.setDataMessage(dataMsg);
                dialog.setStructure(struct);
                dialog.setVisible(true);
            } else if (struct.getStructures().getDataStructures().getDataStructures().size() == 1) {
                dataMsg.setDataStructure(struct.getStructures().getDataStructures().getDataStructures().get(0).asReference(), null);
                dataMsg.getHeader().getStructures().get(0).getStructure().dump();
                CombinedDataJFrame frame = new CombinedDataJFrame();
                StructuredDataMessage cds = new StructuredDataMessage(dataMsg, LocalRegistry.getDefaultWorkspace());
                frame.setCombinedDataAndStructure(cds);
                frame.setDataflow(struct.getStructures().getDataStructures().getDataStructures().get(0).asDataflow());
                MainJFrame.FRAME.showRequest(frame);
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (dataFis != null) {
                    dataFis.close();
                }
                if (strucFis != null) {
                    strucFis.close();
                }
            } catch (IOException ex) {
                Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jbLoadBothActionPerformed


    private Queryable q = null;
    private void jcbProviderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbProviderActionPerformed
        try {
            q = ((DataProvider) jcbProvider.getSelectedItem()).getQueryable();
            refModel.setList(q.getRegistry().listDataflows());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        jcbDataSet.setSelectedItem(null);
    }//GEN-LAST:event_jcbProviderActionPerformed

    private void jcbDataSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDataSetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbDataSetActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DataProviderJFrame frame = new DataProviderJFrame();
        //Queryable q = ((DataProvider) jcbProvider.getSelectedItem()).getQueryable();
        q.getRegistry().clear();
        frame.setDataStructure(q, (DataflowType) refModel.getSelectedItem());
        MainJFrame.FRAME.showRequest(frame);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        FileOutputStream fos = null;
        try {
            JFileChooser jfc = new JFileChooser();
            jfc.showSaveDialog(this);
            File f = jfc.getSelectedFile();
            if( f == null ) return;
            fos = new FileOutputStream(f);
            FileInputStream fis = new FileInputStream(jtStructure.getText());
            ParseParams params = new ParseParams();
            params.setRegistry(LocalRegistry.getDefaultWorkspace());
            params.setUseDataflowName(true);
            DataflowType flow = new DataflowType();
            flow.setId(new IDType("DATAFLOW"));
            params.setDataflow(flow);
            StructureType struct = SdmxIO.parseStructure(params,fis);
            SdmxIO.write(params,(String)jcbStructureMime.getSelectedItem(), struct, fos);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fos.close();
            } catch (IOException ex) {
                Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        FileOutputStream fos = null;
        try {
            JFileChooser jfc = new JFileChooser();
            jfc.showSaveDialog(this);
            File f = jfc.getSelectedFile();
            if( f == null ) return;
            fos = new FileOutputStream(f);
            FileInputStream fis = new FileInputStream(jtStructure.getText());
            Registry registry = new LocalRegistry();
            ParseParams params = new ParseParams();
            params.setRegistry(registry);
            StructureType struct = SdmxIO.parseStructure(params,fis);
            FileInputStream dataIn = new FileInputStream(jtData.getText());
            params.setDataflow(struct.getStructures().getDataStructures().getDataStructures().get(0).asDataflow());
            ParseDataCallbackHandler cbHandler = SdmxIO.openForStreamWriting((String)jcbDataMime.getSelectedItem(), fos, params);
            params.setCallbackHandler(cbHandler);
            SdmxIO.parseData(params,dataIn);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fos.close();
            } catch (IOException ex) {
                Logger.getLogger(LoadDataJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseData;
    private javax.swing.JButton browseFile;
    private javax.swing.JButton browseStructure;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbLoadBoth;
    private javax.swing.JComboBox jcbDataMime;
    private javax.swing.JComboBox jcbDataSet;
    private javax.swing.JComboBox jcbProvider;
    private javax.swing.JComboBox jcbStructureMime;
    private javax.swing.JTextField jtData;
    private javax.swing.JTextField jtStructure;
    // End of variables declaration//GEN-END:variables
}
